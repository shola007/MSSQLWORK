CREATE TABLE STUDIES(
PNAME VARCHAR(50) NOT NULL,
INSTITUTE VARCHAR(50) NOT NULL,
COURSE VARCHAR(50) NOT NULL,
[COURSE FEE] INT NOT NULL 
)
INSERT INTO STUDIES(PNAME, INSTITUTE, COURSE, [COURSE FEE])
VALUES ('ANAND', 'SABHARI', 'PGDCA', 4500), 
       ('ALTAF', 'COIT', 'DCA', 7200),
	   ('JULIANA', 'BDPS', 'MCA', 22000),
	   ('KAMALA', 'PRAGATHI', 'DCA', 5000),
	   ('MARY', 'SABHARI', 'PGDCA', 4500),
	   ('NELSON', 'PRAGATHI', 'DAP', 6200),
	   ('PATRICK', 'PRAGATHI', 'DCAP', 5200),
	   ('QADIR', 'APPLE', 'HDCA', 14000),
	   ('RAMESH', 'SABHARI', 'PGDCA', 4500),
	   ('REBECCA', 'BRILLIANT', 'DCAP', 11000),
	   ('REMITHA', 'BDPS', 'DCS', 6000),
	   ('REVATHI', 'SABHARI', 'DAP', 5000),
	   ('VIJAYA', 'BDPS', 'DCA', 48000)

GO
CREATE TABLE SOFTWARE(
PNAME VARCHAR(50) NOT NULL,
TITTLE VARCHAR(100) NOT NULL,
DEVELOPIN VARCHAR(50) NOT NULL,
SCOST INT NOT NULL,
DCOST INT NOT NULL,
SOLD INT NOT NULL
)
INSERT INTO SOFTWARE(PNAME, TITTLE, DEVELOPIN, SCOST, DCOST, SOLD)
VALUES ('MARY', 'README', 'CPP', 300, 1200, 84),
       ('ANAND', 'PARACHUTES', 'BASIC', 399.95, 6000, 43),
	   ('ANAND', 'VIDEO TITLING', 'PASCAL', 7500, 16000, 9),
	   ('JULIANA', 'INVENTORY', 'COBOL', 3000, 3500, 0),
	   ('KAMALA', 'PAYROLL PKG', 'DBASE', 9000, 20000, 7),
	   ('MARY', 'FINANCIAL ACCT', 'ORACLE', 18000, 85000, 4),
	   ('MARY', 'CODE GENERATOR', 'C', 4500, 20000, 23),
	   ('PATRICK', 'README', 'CPP', 300, 1200, 84),
	   ('QADIR', 'BOMBS AWAY', 'ASSEMBLY', 750, 3000, 11),
	   ('QADIR', 'VACCINES', 'C', 1900, 3100, 21),
	   ('RAMESH', 'HOTEL MGMT', 'DBASE', 13000, 35000, 4),
	   ('RAMESH', 'DEAD LEE', 'PASCAL', 599.95, 4500, 73),
	   ('RAMETHA', 'PC UTILITIES', 'C', 725, 5000, 51),
	   ('RAMETHA', 'TSR HELP PKG', 'ASSEMBLY', 2500, 6000, 7),
	   ('REVATHI', 'HOSPITAL MGMT', 'PASCAL', 1100, 75000, 2),
	   ('VIJAYA', 'TSR EDITOR', 'C', 900, 700, 6)
GO
select PNAME, CONVERT(VARCHAR, (DOB), 6)DOB, CONVERT(VARCHAR, (DOJ), 6)DOJ, GENDER,PROF1, PROF2,SALARY from PROGRAMMER
CREATE TABLE PROGRAMMER(
PNAME VARCHAR(50) NOT NULL,
DOB DATE,
DOJ DATE,
GENDER VARCHAR(5) NOT NULL,
PROF1 VARCHAR(50) NOT NULL,
PROF2 VARCHAR(50) NOT NULL,
SALARY INT NOT NULL
)
INSERT INTO PROGRAMMER(PNAME, DOB, DOJ, GENDER, PROF1, PROF2, SALARY)
VALUES ('ANAND',  '1966-04-12', '1992-04-21', 'M', 'PASCAL', 'BASIC', 3200), 
       ('ALTAF',  '1964-07-02', '1990-11-13', 'M', 'CLIPPER', 'COBOL', 2800),
	   ('JULIANA', '1960-01-31', '1990-04-21',  'F', 'COBOL', 'DBASE', 3000),
	   ('KAMALA', '1968-10-30', '1992-01-02', 'F', 'C', 'DBASE', 2900),
	   ('MARY',  '1970-06-24', '1991-02-01', 'F', 'CPP', 'ORACLE', 4500),
	   ('NELSON', '1985-09-11', '1989-10-11', 'M', 'COBOL', 'DBASE', 2500),
	   ('PATRICK', '1965-11-10',  '1990-04-21', 'M',  'PASCAL', 'CLIPPER', 2800),
	   ('QADIR', '1965-08-31', '1991-04-21', 'M', 'ASSEMBLY', 'C', 3000),
	   ('RAMESH',  '1967-05-03', '1991-02-28', 'M', 'PASCAL', 'DBASE', 3200),
	   ('REBECCA', '1967-01-01',  '1990-12-01',  'F', 'BASIC', 'COBOL', 2500),
	   ('REMITHA',  '1970-04-19', '1993-04-20', 'F', 'C', 'ASSEMBLY', 3600),
	   ('REVATHI',  '1969-12-02', '1992-01-02', 'F', 'PASCAL', 'BASIC', 3700),
	   ('VIJAYA', '1965-12-14', '1992-05-02', 'F', 'FOXPRO', 'C', 3500)



1.SELECT MAX(SOLD)AS [HIGHEST COPIES] FROM SOFTWARE;

2.SELECT MIN([COURSE FEE]) AS [LOEWST COURSE FEE] FROM  STUDIES;

3.SELECT MAX(DATEDIFF(YEAR, DOB, GETDATE()) )AS [OLDEST MALE PROGRAMMER] FROM PROGRAMMER WHERE GENDER = 'M';

4. SELECT AVG(DATEDIFF(YEAR, DOB, GETDATE()) )AS [AVG AGE OF FEMALE] FROM PROGRAMMER WHERE GENDER = 'F';

5. SELECT PNAME, DATEDIFF(YEAR, DOJ, GETDATE()) AS EXPERIENCE FROM PROGRAMMER ORDER BY EXPERIENCE DESC;

6. SELECT COUNT(PNAME) FROM STUDIES WHERE COURSE LIKE 'PGDCA';

7. SELECT SUM(SCOST * SOLD) AS [REVENUE FROM C]  FROM SOFTWARE WHERE DEVELOPIN = 'C' ;

8. SELECT COUNT(PNAME) FROM STUDIES WHERE INSTITUTE LIKE 'SABHARI' ;

9. SELECT COUNT(TITTLE) FROM SOFTWARE WHERE DEVELOPIN LIKE 'DBASE';

10. SELECT COUNT(PNAME) FROM STUDIES WHERE INSTITUTE LIKE 'PRAGATHI' ;

11. SELECT COUNT(PNAME) FROM STUDIES WHERE [COURSE FEE] BETWEEN 5000 AND 10000 ;

12. SELECT COUNT (PNAME) FROM PROGRAMMER WHERE PROF1 = 'COBOL' OR PROF2 = 'PASCAL' OR  PROF1 ='PASCAL' OR PROF2 ='COBOL';

13.  SELECT COUNT(PNAME) AS [FEMALE PROGRAMMER] FROM PROGRAMMER WHERE GENDER LIKE 'F';

14. SELECT AVG(SALARY) AS [AVG SALARY] FROM PROGRAMMER ;

15. SELECT COUNT(PNAME) AS [DRAW SALARY] FROM PROGRAMMER WHERE SALARY BETWEEN 2000 AND 4000;
 
16. SELECT PNAME, SUM(SCOST) AS [SALES COST] FROM SOFTWARE GROUP BY PNAME;

17. SELECT * FROM STUDIES AS STD
 INNER JOIN PROGRAMMER AS PRG
 ON STD.PNAME = PRG.PNAME
 WHERE GENDER = 'M' AND INSTITUTE = 'SABHARI';

 18. SELECT TOP 1  PNAME, DATEDIFF(YEAR, DOB, GETDATE())AS AGE FROM PROGRAMMER WHERE (DATEPART(YEAR, DOJ) = 1992) AND GENDER = 'F' 
 ORDER BY AGE DESC;
 
 19. SELECT TOP 1 PNAME , DATEDIFF(YEAR, DOB, GETDATE()) AS AGE FROM PROGRAMMER WHERE (DATEPART(YEAR, DOB) = 1965) AND GENDER = 'M' 
 ORDER BY AGE ASC;

 20. SELECT TITTLE , SCOST FROM SOFTWARE WHERE SCOST = (SELECT MIN(SCOST) FROM SOFTWARE);

 21. SELECT * FROM PROGRAMMER WHERE SALARY > 3000 AND GENDER = 'F' AND PROF1 != 'C' AND PROF1 != 'C++' AND PROF1 != 'ORACLE' AND PROF1!='DBASE'
 AND PROF2 != 'C' AND PROF2 != 'C++' AND PROF2 != 'ORACLE' AND PROF2!='DBASE';
  
  22. SELECT TOP 1 PNAME, (DATEDIFF(YEAR, DOB, GETDATE()))AS [YOUNGEST PROGRAMMER] FROM PROGRAMMER WHERE PROF2 = 'DBASE' 
  ORDER BY [YOUNGEST PROGRAMMER] ;

  23. SELECT PROF1 FROM PROGRAMMER
     GROUP BY PROF1
     HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER)
     AND COUNT(PROF1)=1
     UNION
     SELECT PROF2 FROM PROGRAMMER
     GROUP BY PROF2
     HAVING PROF2 NOT IN(SELECT PROF1 FROM PROGRAMMER)
     AND COUNT(PROF2)=1;

 24. SELECT TOP 1 PNAME, MAX(DATEDIFF(YEAR, DOJ, GETDATE())) [MOST EXPERIENCE] FROM PROGRAMMER WHERE PROF1 =  'PASCAL' AND GENDER = 'M' 
 GROUP BY PNAME ORDER BY [MOST EXPERIENCE] DESC;

 25. SELECT TOP 1 PNAME , MIN(DATEDIFF(YEAR, DOJ, GETDATE())) [LEAST EXPERIENCE] FROM PROGRAMMER GROUP BY PNAME 
 ORDER BY [LEAST EXPERIENCE] ASC;

 26. SELECT DEVELOPIN, COUNT(TITTLE) [LANGUAGES] FROM SOFTWARE WHERE DCOST < 1000 GROUP BY DEVELOPIN ;

 27. SELECT MAX(SALARY)AS [HIGHEST SALARY], MIN(SALARY)[LOWEST SALARY], AVG(SALARY)[AVG SALARY] FROM PROGRAMMER WHERE SALARY > 2000;

